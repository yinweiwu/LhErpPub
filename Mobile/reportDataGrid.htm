<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <meta charset="UTF-8">
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Cache-Control" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <link rel="stylesheet" type="text/css" href="/Base/JS/easyui/themes/default/easyui.css" />
    <link rel="stylesheet" type="text/css" href="/Base/JS/easyui/themes/mobile.css" />
    <link rel="stylesheet" type="text/css" href="/Base/JS/easyui/themes/icon.css" />
    <script type="text/javascript" src="/Base/JS/easyui/jquery.min.js"></script>
    <script type="text/javascript" src="/Base/JS/easyui/jquery.easyui.min.js"></script>
    <script type="text/javascript" src="/Base/JS/easyui/jquery.easyui.mobile.js"></script>
    <script src="/Base/JS/easyui/locale/easyui-lang-zh_CN.js" type="text/javascript"></script>
    <script src="/Base/JS/json2.js" type="text/javascript"></script>
    <script src="/Base/JS/DataInterface.js" type="text/javascript"></script>
    <script type="text/javascript" src="JS/LookUpMobile.js"></script>
    <script language="javascript" type="text/javascript">
        var userid = "";
        var filters = "1=1";
        var queryFirst = false;
        var pageSize = 30;
        var summryFieldsArr = [];
        var iStore = false;
        var assiteData = [];
        var AsscateShow = false;
        $(function () {
            filters = getQueryString("filters") == null ? "1=1" : getQueryString("filters");
            //获取用户名
            $.ajax(
                {
                    url: "/ashx/LoginHandler.ashx",
                    async: false,
                    cache: false,
                    type: "post",
                    data: { otype: "getcurtuserid" },
                    success: function (resText) {
                        userid = resText;
                    },
                    error: function (resText) {

                    }
                }
            )
            var sqlObjUser = {
                TableName: "bscDataPerson",
                Fields: "sCode,sName,sClassID",
                SelectAll: "True",
                Filters: [
                    {
                        Field: "sCode",
                        ComOprt: "=",
                        Value: "'" + userid + "'"
                    }
                ]
            }
            var person = SqlGetData(sqlObjUser);
            //获取报表信息
            $.ajax({
                type: "post",
                url: "Handler/MobileReportHandler.ashx",
                data: { otype: "GetReportInfo", iMenuID: getQueryString("iMenuID") },
                async: false,
                cache: false,
                success: function (obj) {
                    if (obj.success == true) {
                        var info = JSON2.parse(obj.message);
                        pageSize = info.pPageCount == "" ? 30 : info.pPageCount;
                        iStore = info.iStore == "1" ? true : false;
                        //$("#ptitle").linkbutton({ text: info.sBillType });
                    }
                },
                error: function (data) {
                    var aa = data;
                },
                dataType: "json"
            });
            //获取关联信息
            $.ajax({
                type: "post",
                url: "Handler/MobileReportHandler.ashx",
                data: { otype: "GetAssicateData", iMenuID: getQueryString("iMenuID") },
                async: false,
                cache: false,
                success: function (obj) {
                    if (obj.success == true) {
                        assiteData = obj.tables[0];
                        if (assiteData.length > 0) {
                            for (var i = 0; i < assiteData.length; i++) {
                                var btn = $("<div >" + assiteData[i].sMenuName + "</div>");
                                $("#mm").append(btn);
                            }
                            $.parser.parse("#mm");
                        }
                    }
                },
                error: function (data) {
                    //var aa = data;
                },
                dataType: "json"
            });
            //获取查询条件
            $.post("Handler/MobileReportHandler.ashx", { otype: "GetReportCondition", iMenuID: getQueryString("iMenuID") },
                function (obj) {
                    if (obj.success == true) {
                        var data = obj.tables[0];
                        queryConditions = data;
                        //var person = resObj.tables[1];
                        var GetInput = function (type, id, value, required, fieldid) {
                            var html = "";
                            switch (type) {
                                case "S":
                                    {
                                        html = "<input id=\"" + id + "\" name=\"" + fieldid + "\" type=\"text\" class=\"easyui-textbox\" data-options=\"value:'" + value + "',required:" + required + ",width:120\" />";
                                    } break;
                                case "F":
                                    {
                                        html = "<input id=\"" + id + "\" name=\"" + fieldid + "\" type=\"text\" class=\"easyui-numberbox\" data-options=\"value:" + value + ",required:" + required + ",width:120\" />";
                                    } break;
                                case "D":
                                    {
                                        html = "<input id=\"" + id + "\" name=\"" + fieldid + "\" type=\"text\" class=\"easyui-datebox\" data-options=\"value:'" + value + "',required:" + required + ",width:120\" />";
                                    } break;
                                case "DT":
                                    {
                                        html = "<input id=\"" + id + "\" name=\"" + fieldid + "\" type=\"text\" class=\"easyui-datetimebox\" data-options=\"value:'" + value + "',required:" + required + ",width:120\" />";
                                    } break;
                                case "B":
                                    {
                                        html = "<input id=\"" + id + "\" name=\"" + fieldid + "\" type=\"text\" class=\"easyui-switchbutton\" />";
                                    } break;
                            }
                            return html;
                        }
                        var GetLookUpInput = function (id, fieldid, lookupName, lookupFilters) {
                            var html = "<input type=\"text\" id=\"" + id + "\" name=\"" + fieldid + "\" lookUpOptions=\"[{uniqueid:&quot;&quot;,lookUpName:&quot;" + lookupName + "&quot;,lookUpFilters:&quot;" + lookupFilters + "&quot;}]\" />";
                            return html;
                        }

                        var html = "";
                        for (var i = 0; i < data.length; i++) {
                            var theRow = data[i];
                            html += "<li>";
                            var valueO = data[i].sValue;
                            var value = valueO;
                            switch (value) {
                                case "UserID": value = person[0].sCode; break;
                                case "UserName": value = person[0].sName; break;
                                case "CurrentDate": value = getNowDate(); break;
                                case "CurrentDateTime": value = getNowDate() + " " + getNowTime(); break;
                                case "Departid": value = person[0].sClassID; break;
                                case "NewGUID": value = NewGuid(); break;
                            }
                            var required = data[i].iRequired == "1" ? true : false;
                            if (data[i].sLookUpName == undefined || data[i].sLookUpName == null || data[i].sLookUpName == "") {
                                html += data[i].sCaption + "<div class=\"m-right\">";
                                html += GetInput(data[i].sFieldType, data[i].sFieldName + "_" + data[i].iSerial, value, required, data[i].sFieldName);
                                html += "</div>";
                            }
                            else {
                                html += data[i].sCaption + "<div class=\"m-right\">";
                                html += GetLookUpInput(data[i].sFieldName + "_" + data[i].iSerial, data[i].sFieldName, data[i].sLookUpName, data[i].sLookUpFilters);
                                html += "</div>";
                            }
                            html += "</li>";
                        }
                        var apphtml = $(html);
                        $("#ulSearchList").append(apphtml);
                        $.parser.parse("#ulSearchList");
                    }
                }
                , "json"
                ).error(function (obj) {

                });

            //获取所有列
            $.post(
                "Handler/MobileReportHandler.ashx",
                { otype: "GetReportColumns", iMenuID: getQueryString("iMenuID") },
                function (obj) {
                    if (obj.success == true) {
                        var columnData = obj.tables[0];
                        //固定列和非固定列
                        var columnDataNoFix = [];
                        var columnDataFix = [];
                        for (var i = 0; i < columnData.length; i++) {
                            if (columnData[i].ifix != "1") {
                                columnDataNoFix.push(columnData[i]);
                            }
                            else {
                                columnDataFix.push(columnData[i]);
                            }
                        }

                        //非固定列
                        var getColums = function (columnData) {
                            //看看有没有多表头的列，有多表头的话，要加rowspan和colspan属性
                            //多表头的格式：
                            /*
                            columns:[[    
                            {field:'itemid',title:'Item ID',rowspan:2,width:80,sortable:true},    
                            {field:'productid',title:'Product ID',rowspan:2,width:80,sortable:true},    
                            {title:'Item Details',colspan:4}    
                            ],[    
                            {field:'listprice',title:'List Price',width:80,align:'right',sortable:true},    
                            {field:'unitcost',title:'Unit Cost',width:80,align:'right',sortable:true},    
                            {field:'attr1',title:'Attribute',width:100},    
                            {field:'status',title:'Status',width:60}    
                            ]]
                            */
                            //分固定列和非固定列
                            var columns = [];
                            //列1数组
                            var columns1 = [];
                            //列2数组，如果有多表头
                            var columns2 = [];
                            var hasMultiColumn = false;
                            for (var i = 0; i < columnData.length; i++) {
                                var iHide = columnData[i].iHide;
                                if (iHide != "1") {
                                    if (columnData[i].sFieldsdisplayName.indexOf("|") > -1) {
                                        hasMultiColumn = true;
                                        break;
                                    }
                                }
                            }
                            var rowspan = 1;
                            var colspan = 1;
                            var lastMultiTitle = ""; //最后一次的多表头
                            for (var i = 0; i < columnData.length; i++) {
                                //汇总字段
                                if (columnData[i].sSummary != "" && columnData[i].sSummary != null && columnData[i].sSummary != undefined) {
                                    var summArr = columnData[i].sSummary.split(",");
                                    for (var j = 0; j < summArr.length; j++) {
                                        summryFieldsArr.push(
                                            {
                                                Type: summArr[j],
                                                Field: columnData[i].sFieldsName
                                            }
                                        )
                                    }
                                }

                                var theColumn = {};
                                var iHide = columnData[i].iHide;
                                if (iHide == "1") {
                                    theColumn.hidden = true;
                                }
                                theColumn.title = columnData[i].sFieldsdisplayName;
                                theColumn.field = columnData[i].sFieldsName;
                                theColumn.width = (columnData[i].iWidth == "" || columnData[i].iWidth == null || columnData[i].iWidth == undefined ? 80 : columnData[i].iWidth);
                                theColumn.sortable = true;
                                theColumn.align = "center";
                                theColumn.halign = "center";
                                theColumn.sortable = true;
                                if (iHide != "1") {
                                    if (hasMultiColumn == true) {
                                        if (columnData[i].sFieldsdisplayName.indexOf("|") > -1) {
                                            colspan = 1;
                                            var multiTitle = columnData[i].sFieldsdisplayName.substr(0, columnData[i].sFieldsdisplayName.indexOf("|"));
                                            //如果最后一次多表头为空或者跟现在的多表头不一样，那么表示是新的多表头；否则是原多表头
                                            if (lastMultiTitle == "" || lastMultiTitle != multiTitle) {
                                                lastMultiTitle = multiTitle;
                                                if (i < columnData.length - 1) {//如果不是最后一列
                                                    for (var j = i + 1; j < columnData.length; j++) {
                                                        if (columnData[j].sFieldsdisplayName.indexOf("|") > -1) {
                                                            //找到后面有几列是相同的表头
                                                            var multiTitleNext = columnData[j].sFieldsdisplayName.substr(0, columnData[j].sFieldsdisplayName.indexOf("|"));
                                                            if (multiTitleNext == multiTitle) {
                                                                colspan++;
                                                            }
                                                            else {
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                                theColumn.colspan = colspan;
                                                theColumn.title = lastMultiTitle;
                                                columns1.push(theColumn);

                                                var theColumn2 = {};
                                                theColumn2.title = columnData[i].sFieldsdisplayName.substr(columnData[i].sFieldsdisplayName.indexOf("|") + 1, columnData[i].sFieldsdisplayName.length - columnData[i].sFieldsdisplayName.indexOf("|"));
                                                theColumn2.field = columnData[i].sFieldsName;
                                                theColumn2.width = (columnData[i].iWidth == "" || columnData[i].iWidth == null || columnData[i].iWidth == undefined ? 80 : columnData[i].iWidth);
                                                theColumn2.sortable = true;
                                                theColumn2.align = "center";
                                                theColumn2.halign = "center";
                                                theColumn2.sortable = true;
                                                columns2.push(theColumn2);
                                            }
                                            else {
                                                theColumn.title = columnData[i].sFieldsdisplayName.substr(columnData[i].sFieldsdisplayName.indexOf("|") + 1, columnData[i].sFieldsdisplayName.length - columnData[i].sFieldsdisplayName.indexOf("|"));
                                                columns2.push(theColumn);
                                            }
                                        }
                                        else {
                                            theColumn.rowspan = 2;
                                            columns1.push(theColumn);
                                        }
                                    }
                                    else {
                                        columns1.push(theColumn);
                                    }
                                }
                                else {
                                    columns1.push(theColumn);
                                }
                            }
                            columns.push(columns1);
                            if (columns2.length > 0) {
                                columns.push(columns2);
                            }
                            return columns;
                        }

                        var columnsFix = getColums(columnDataFix);
                        var columnsNoFix = getColums(columnDataNoFix);

                        $("#dg").datagrid(
                        {
                            fit: true,
                            header: "#divHeader",
                            border: false,
                            columns: columnsNoFix,
                            frozenColumns: columnsFix,
                            //url: "Handler/MobileReportHandler.ashx",
                            remoteSort: true,
                            pageNumber: 1,
                            pageSize: pageSize,
                            pagination: true,
                            pageList: [pageSize * 1, pageSize * 2, pageSize * 5, pageSize * 10],
                            queryParams: { otype: "getReportData", iMenuID: getQueryString("iMenuID"), filters: filters },
                            singleSelect: true,
                            onLoadSuccess: function (data) {
                                var footData = GetFootData(summryFieldsArr);
                                $('#dg').datagrid('reloadFooter', footData);
                            },
                            showFooter: (summryFieldsArr.length > 0 ? true : false),
                            onClickRow: function (index, row) {
                                if (assiteData.length > 0) {
                                    doAssciate(0);
                                }
                            }
                        }
                        );

                        //是否是先显示查询条件
                        var sqlObjMenu = {
                            TableName: "FSysMainMenu",
                            Fields: "iQueryFirst",
                            SelectAll: "True",
                            Filters: [
                            {
                                Field: "iMenuID",
                                ComOprt: "=",
                                Value: "'" + getQueryString("iMenuID") + "'"
                            }
                            ]
                        }
                        var resultMenu = SqlGetData(sqlObjMenu);
                        if (resultMenu.length > 0) {
                            if (resultMenu[0].iQueryFirst == "1" && getQueryString("isAssciate") != "1") {
                                queryFirst = true;
                                $.mobile.go("#divSearchList");
                            }
                            else {
                                getReportData();
                            }
                        }
                    }
                    else {
                        showMessage("获取列时出错", obj.message);
                    }
                    lookUpMobile.init();
                }, "json"
            ).error(function () {

            });
        })

        function getReportData() {
            var options = $("#dg").datagrid("options");
            var url = options.url;
            var queryParams = options.queryParams;
            queryParams.filters = filters;
            if (url) {
                $("#dg").datagrid("load", queryParams);
            }
            else {
                $("#dg").datagrid(
                    {
                        url: "Handler/MobileReportHandler.ashx",
                        queryParams: queryParams
                    }
                )
            }
        }
        function CalcFootData(data, field, otype) {
            var result = 0;
            switch (otype) {
                case "sum":
                    {
                        for (var i = 0; i < data.length; i++) {
                            result += isNaN(parseFloat(data[i][(field)])) ? 0 : parseFloat(data[i][(field)]);
                        }
                        result = result.toFixed(3);
                    } break;
                case "avg":
                    {
                        var total = 0;
                        for (var i = 0; i < data.length; i++) {
                            total += isNaN(parseFloat(data[i][(field)])) ? 0 : parseFloat(data[i][(field)]);
                        }
                        result = total / data.length;
                        result = result.toFixed(3);
                    } break;
                case "count": result = data.length; break;
                case "max":
                    {
                        if (data.length == 0) {
                            result = 0;
                        }
                        else {
                            result = isNaN(parseFloat(data[0][(field)])) ? 0 : parseFloat(data[0][(field)]);
                        }
                        for (var i = 0; i < data.length; i++) {
                            var value = isNaN(parseFloat(data[i][(field)])) ? 0 : parseFloat(data[i][(field)]);
                            if (result < value) {
                                result = value;
                            }
                        }
                    } break;
                case "min":
                    {
                        if (data.length == 0) {
                            result = 0;
                        }
                        else {
                            result = isNaN(parseFloat(data[0][(field)])) ? 0 : parseFloat(data[0][(field)]);
                        }
                        for (var i = 0; i < data.length; i++) {
                            var value = isNaN(parseFloat(data[i][(field)])) ? 0 : parseFloat(data[i][(field)]);
                            if (result > value) {
                                result = value;
                            }
                        }
                    } break;
            }
            return result;
        }
        function GetFootData(objArr) {
            var allData = [];
            var data = $('#dg').datagrid('getData').originalRows ? $('#dg').datagrid('getData').originalRows : $('#dg').datagrid('getData').rows;
            //1、求和
            var sumData = undefined;
            for (var i = 0; i < objArr.length; i++) {
                if (objArr[i].Type == "sum") {
                    if (sumData == undefined) {
                        sumData = {};
                    }
                    sumData[(objArr[i].Field)] = CalcFootData(data, objArr[i].Field, "sum");
                }
            }
            if (sumData != undefined) {
                sumData.__isFoot = true;
                allData.push(sumData);

            }
            //2、求平均值
            var avgData = undefined;
            for (var i = 0; i < objArr.length; i++) {
                if (objArr[i].Type == "avg") {
                    if (avgData == undefined) {
                        avgData = {};
                    }
                    avgData[(objArr[i].Field)] = CalcFootData(data, objArr[i].Field, "avg");
                }
            }
            if (avgData != undefined) {
                avgData.__isFoot = true;
                allData.push(avgData);
            }
            //3、求个数
            var countData = undefined;
            for (var i = 0; i < objArr.length; i++) {
                if (objArr[i].Type == "count") {
                    if (countData == undefined) {
                        countData = {};
                    }
                    countData[(objArr[i].Field)] = CalcFootData(data, objArr[i].Field, "count");
                }
            }
            if (countData != undefined) {
                countData.__isFoot = true;
                allData.push(countData);
            }
            //4、求最大值
            var maxData = undefined;
            for (var i = 0; i < objArr.length; i++) {
                if (objArr[i].Type == "max") {
                    if (maxData == undefined) {
                        maxData = {};
                    }
                    maxData[(objArr[i].Field)] = CalcFootData(data, objArr[i].Field, "max");
                }
            }
            if (maxData != undefined) {
                maxData.__isFoot = true;
                allData.push(maxData);
            }
            //5、求最小值
            var minData = undefined;
            for (var i = 0; i < objArr.length; i++) {
                if (objArr[i].Type == "min") {
                    if (minData == undefined) {
                        minData = {};
                    }
                    minData[(objArr[i].Field)] = CalcFootData(data, objArr[i].Field, "min");
                }
            }
            if (minData != undefined) {
                minData.__isFoot = true;
                allData.push(minData);
            }
            return allData;
        }
        function searchClear() {
            $("#form1").form("clear");
            var inputLookup = $("input[hasLookUp]");
            for (var i = 0; i < inputLookup.length; i++) {
                var id = $(inputLookup[i]).attr("id");
                var idOr = id.substr(0, id.indexOf("_Value"));
                $("#" + idOr + "_Text").html("");
            }
        }
        function doSearch() {
            var formDataArr = $("#form1").serializeArray();
            filters = iStore == false ? "1=1" : "";
            var thefilter = iStore == false ? "1=1" : "";
            for (var i = 0; i < queryConditions.length; i++) {
                if (formDataArr[i].value != null && formDataArr[i].value != undefined && formDataArr[i].value != "") {
                    if (iStore == false) {
                        var op = queryConditions[i].sOpTion;
                        op = op == "" || op == null || op == undefined ? "like" : op;
                        var value = op == "like" ? "'%" + formDataArr[i].value + "%'" : "'" + formDataArr[i].value + "'";
                        thefilter += " and " + formDataArr[i].name + " " + op + " " + value;
                    }
                    else {
                        var value = formDataArr[i].value;
                        thefilter += formDataArr[i].name + "=" + value + "$";
                    }
                }
            }
            if (iStore == false) {
                filters += " and " + thefilter;
            }
            else {
                filters = thefilter != "" ? thefilter.substr(0, thefilter.length - 1) : "";
            }
            getReportData();
            $.mobile.back();
        }
        //        function showAsscate() {
        //            if (assiteData.length == 1) {
        //                doAssciate(0);
        //            }
        //            else if (assiteData.length > 1) {
        //                if (AsscateShow == false) {
        //                    $("#headerAsscite").show();
        //                    AsscateShow = true;
        //                }
        //                else {
        //                    $("#headerAsscite").hide();
        //                    AsscateShow = false;
        //                }
        //            }
        //        }
        function doAssciate(index) {
            var theAss = assiteData[index];
            var theMenuID = theAss.iMenuID;
            var selectRow = $("#dg").datagrid("getSelected");
            if (selectRow) {
                var theFilters = theAss.sParamValue;
                //var startIndex = 0;
                while (theFilters.indexOf("{") > -1) {
                    var theStart = theFilters.indexOf("{");
                    var theEnd = theFilters.indexOf("}");
                    if (theEnd > -1) {
                        var field = theFilters.substr(theStart + 1, theEnd - theStart - 1);
                        var fieldValue = selectRow[(field)];
                        theFilters = theFilters.replace("{" + field + "}", fieldValue);
                    }
                    else {
                        break;
                    }
                }
                window.location.href = "reportDataGrid.htm?iMenuID=" + theMenuID + "&isAssciate=1&filters=" + escape(theFilters) + "&r=" + Math.random();
            }
            else {
                showMessage("请选择一条数据", "请选择一条数据！");
            }
        }
        function getQueryString(name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return unescape(r[2]); return null;
        }

        function showMessage(title, message) {
            $.messager.show({
                title: title,
                msg: message,
                showType: 'slide',
                timeout: 2000,
                style: {
                    right: '',
                    top: document.body.scrollTop + document.documentElement.scrollTop,
                    bottom: ''
                }
            });
        }
    </script>
</head>
<body>
    <div id="divList" class="easyui-navpanel">
        <table id="dg">
        </table>
        <div id="divHeader">
            <div class="m-toolbar">
                <div class="m-left" style="vertical-align: middle;">
                    <a href="javascript:void(0)" class="easyui-linkbutton m-back" plain="true" outline="true"
                        style="width: 50px" onclick="$.mobile.back()">回退</a>
                </div>
                <!--<div class="m-title">
                    <a id="ptitle" href="javascript:void(0)" class="easyui-linkbutton" plain="true" style="font-weight: bold;">
                    </a>
                </div>-->
                <div class="m-right">
                    <!--<a id="A1" href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-more',plain:true" onclick="showSort()">排序</a>-->
                    <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true"
                        onclick="$.mobile.go('#divSearchList');">查询</a>
                </div>
            </div>
        </div>
    </div>
    <div id="divSearchList" class="easyui-navpanel">
        <header>
            <div class="m-toolbar">
                <div class="m-left" style="vertical-align:middle;">
                    <a href="javascript:void(0)" class="easyui-linkbutton m-back" plain="true" outline="true" style="width:50px" onclick="$.mobile.back()">退回</a>
                </div>
                <div class="m-title">查询</div>
                <div class="m-right">                    
                    <a id="A2" href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-cancel',plain:true" onclick="searchClear()">清空</a>
                    <a id="A3" href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-ok',plain:true" onclick="doSearch()">完成</a>
                </div>
            </div>
        </header>
        <form id="form1">
        <ul id="ulSearchList" class="m-list">
        </ul>
        </form>
    </div>
    <div id="divLookUpList" class="easyui-navpanel">
        <header>
            <div class="m-toolbar">
                <div class="m-left" style="vertical-align:middle;">
                    <a href="javascript:void(0)" class="easyui-linkbutton m-back" plain="true" outline="true" style="width:50px" onclick="lookUpMobile.reset();$.mobile.back();">退回</a>
                </div>
                <div id="divLookUpTitle" class="m-title"></div>
            </div>
        </header>
        <div id="divLookUpResultList">
        </div>
    </div>
</body>
</html>
